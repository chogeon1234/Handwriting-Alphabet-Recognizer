/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Frames;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.awt.image.BufferedImage;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;
import javax.swing.JPanel;

/**
 *
 * @author edkjd
 */
public class ImageToAlphabetFrame extends javax.swing.JFrame {

    /**
     * Creates new form ImageToAlphabetFrame
     */
    public ImageToAlphabetFrame() {
        initComponents();
        setTitle("Image to Alphabet");
        setResizable(false);
        setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        drPn = new DrawingPn();
        alphabetTf = new javax.swing.JTextField();
        scoreTf = new javax.swing.JTextField();
        clearBt = new javax.swing.JButton();
        transBt = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        openMenu = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout drPnLayout = new javax.swing.GroupLayout(drPn);
        drPn.setLayout(drPnLayout);
        drPnLayout.setHorizontalGroup(
            drPnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 250, Short.MAX_VALUE)
        );
        drPnLayout.setVerticalGroup(
            drPnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 250, Short.MAX_VALUE)
        );

        alphabetTf.setEditable(false);
        alphabetTf.setFont(new java.awt.Font("맑은 고딕", 0, 48)); // NOI18N
        alphabetTf.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED), "Alphabet"));

        scoreTf.setEditable(false);
        scoreTf.setFont(new java.awt.Font("맑은 고딕", 0, 48)); // NOI18N
        scoreTf.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED), "Score"));

        clearBt.setText("Clear");
        clearBt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearBtActionPerformed(evt);
            }
        });

        transBt.setText("Trans");
        transBt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transBtActionPerformed(evt);
            }
        });

        jMenu1.setText("File");

        openMenu.setText("Open Image");
        openMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openMenuActionPerformed(evt);
            }
        });
        jMenu1.add(openMenu);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(drPn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(alphabetTf)
                    .addComponent(scoreTf)
                    .addComponent(clearBt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(transBt, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(drPn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(alphabetTf, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(scoreTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1, 1, 1)
                        .addComponent(transBt)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(clearBt)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void transBtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transBtActionPerformed
        // TODO add your handling code here:
        ((DrawingPn) drPn).trans();
    }//GEN-LAST:event_transBtActionPerformed

    private void clearBtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearBtActionPerformed
        // TODO add your handling code here:
        ((DrawingPn) drPn).clear();
    }//GEN-LAST:event_clearBtActionPerformed
    JFileChooser fc = new JFileChooser();
    private void openMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openMenuActionPerformed
        // TODO add your handling code here:
        int res1 = fc.showOpenDialog(this);
        if (res1 != JFileChooser.APPROVE_OPTION) {
            return;
        }
        try {
            Object[] res = WordDrawingProcessor.WordDrawingProcessor.getOneChar(ImageIO.read(fc.getSelectedFile()), ' ');
            alphabetTf.setText("" + res[0]);
            scoreTf.setText("" + (int) (float) res[1] + "%");
        } catch (Exception e) {

        }
    }//GEN-LAST:event_openMenuActionPerformed

    class DrawingPn extends JPanel implements MouseMotionListener, MouseListener {

        public DrawingPn() {
            addMouseMotionListener(this);
            addMouseListener(this);
            clear();
        }
        BufferedImage image = new BufferedImage(250, 250, BufferedImage.TYPE_3BYTE_BGR);

        @Override
        public void paintComponent(Graphics g) {
            g.drawImage(image, 0, 0, 250, 250, this);
        }

        public void trans() {
            Object[] res = WordDrawingProcessor.WordDrawingProcessor.getOneChar(image, ' ');
            alphabetTf.setText("" + res[0]);
            scoreTf.setText("" + (int) (float) res[1] + "%");
        }

        public void clear() {
            Graphics g = image.getGraphics();
            g.setColor(Color.WHITE);
            g.fillRect(0, 0, 250, 250);
            repaint();
        }

        @Override
        public void mouseDragged(MouseEvent e) {
            Graphics g = image.getGraphics();
            g.setColor(Color.BLACK);
            g.fillOval(e.getX() - 10, e.getY() - 10, 20, 20);
            repaint();
        }

        @Override
        public void mouseMoved(MouseEvent e) {

        }

        @Override
        public void mouseClicked(MouseEvent e) {
        }

        @Override
        public void mousePressed(MouseEvent e) {

            Graphics g = image.getGraphics();
            g.setColor(Color.BLACK);
            g.fillOval(e.getX() - 10, e.getY() - 10, 20, 20);
            repaint();
        }

        @Override
        public void mouseReleased(MouseEvent e) {
        }

        @Override
        public void mouseEntered(MouseEvent e) {
        }

        @Override
        public void mouseExited(MouseEvent e) {
        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField alphabetTf;
    private javax.swing.JButton clearBt;
    private javax.swing.JPanel drPn;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem openMenu;
    private javax.swing.JTextField scoreTf;
    private javax.swing.JButton transBt;
    // End of variables declaration//GEN-END:variables
}
